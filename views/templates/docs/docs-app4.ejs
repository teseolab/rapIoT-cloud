<!--
   Copyright 2017 Anders Riise MÃ¦hlum

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->

<% var nameOfDocs = "docs-app4"; %>
    <script type="text/ng-template" id="/<%=nameOfDocs%>.html">
        <div class="wrapper toggled">
            <div id="sidebar-wrapper">
                <% var active = nameOfDocs %>
                    <% include docs-common-sidebar %>
            </div>
            <div id="page-content-wrapper">
                <div>
                    <% include docs-common-content %>
                </div>
                <h2>4. List Physical Objects</h2>
                <p>
                    In this step of the process you will be identifying the physical objects of your application and registering them in the
                    application created in the
                    <a href="{{prevUrl()}}">previous step</a> of the process. This page will guide you through the step of
                    using the
                    <a href="http://tilestoolkit.io/cards" target="_blank">TILES Cards</a> to identify the physical objects.
                </p>

                <h3>a. Identifying physical objects</h3>
                <p>
                    Using the TILES Cards makes it very easy to identify the physical objects of your application. In fact, every THINGS card
                    used in the ideation process represents one physical object in your application. To transition from the
                    TILES Cards you will need to write down all the THINGS Cards you have used on a piece of paper.
                </p>
                <div class="docs-img docs-cards">
                    <img src="/images/tiles_cards/t-4.jpg" alt="tiles_card_t-4" />
                    <img src="/images/tiles_cards/t-9.jpg" alt="tiles_card_t-9" />
                    <img src="/images/tiles_cards/t-10.jpg" alt="tiles_card_t-10" />
                    <img src="/images/tiles_cards/t-13.jpg" alt="tiles_card_t-13" />
                    <br/>
                    <span>THINGS Cards from TILES Cards</span>
                </div>

                <h3>b. Configure <i>items</i> in your application</h3>
                <p>
                    Now that you have identified all physical objects to be used in your application it is time to configure
                    <i>items</i> in your application. To do this you need to navigate to the
                    <a href="/#/applications" target="_blank">applications</a> page and select your application from the
                    list. If you cannot find your application in the list, you will need to go through the
                    <a href="#/docs-app3">Create Application</a> step of the process. After you have selected your application
                    from the list, you will see a similar page as in the image below.
                </p>
                <div class="docs-img opacity75">
                    <img src="/images/howto/howto-add-abstract-tile.png" alt="application_details" />
                    <br/>
                    <span>Application details, with two items</span>
                </div>
                <p>
                    The <b>garage_control_system</b> application seen above already has two items registered;
                    <b>front_door</b> and <b>garage_door</b>. By clicking the
                    <b>+ new item</b> button, you will be able to add a new item. Make sure to do this for all the physical
                    objects you identified previously. You should give the items short names as you will be using these names
                    later in your program code.
                </p>
            </div>
        </div>
    </script>