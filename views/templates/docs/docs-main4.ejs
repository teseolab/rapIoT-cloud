<!--
   Copyright 2017 Anders Riise MÃ¦hlum

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->

<% var nameOfDocs = "docs-main4"; %>
    <script type="text/ng-template" id="/<%=nameOfDocs%>.html">
        <div class="wrapper toggled">
            <div id="sidebar-wrapper">
                <% var active = nameOfDocs %>
                    <% include docs-common-sidebar %>
            </div>
            <div id="page-content-wrapper">
                <div>
                    <% include docs-common-content %>
                </div>
                <h2>Development Environments</h2>
                <p>
                    This section of the documentation is intended to help you decide which development environment you should use to develop
                    your application. It will briefly explain the differences between the available environments and what
                    prerequisites are needed for using them. This section will <b>not</b> go into details
                    about how to develop TILES applications using the APIs of the development environments. For that purpose,
                    see the documentation on the respective API of the development environment in question. If this is your
                    first time developing a TILES application, we suggest the
                    <b>Cloud Development Environment</b>.
                </p>
                <h3>Cloud development environment</h3>
                <p>
                    The Cloud development environment is running a <a href="https://c9.io/" target="_blank">cloud9</a> web
                    portal as your IDE. When the Cloud development environment is selected for developing a TILES application,
                    the TILES API library files are created and the IDE is configured automatically. The cloud9 IDE will
                    be running in the browser, which means that no local setup is required, and you can run the development
                    environment using your favorite operating system and web browser. Once the environment is created, you
                    will be developing your application using JavaScript, and the TILES toolkit <a href="{{JSdevUrl}}">JavaScript APIs</a>.
                </p>
                <p>
                    To start the development environment, navigate to the
                    <a href="/#/applications" target="_blank">list of applications</a> and select your application. In the
                    application details page you will need to click the <b>Host application</b> button, which will start
                    a new instance of the cloud9 web IDE and display the <b>Launch Environment</b> button as seen in the
                    image below.
                </p>
                <div class="docs-img opacity75">
                    <img src="/images/howto/howto-startstop-cloud-ide.png" alt="start_stop_cloud_web_ide" />
                    <br/>
                    <span>Start hosting of the cloud9 web IDE for the application</span>
                </div>
                <p>
                    Once the workspace environment has been hosted, you can access the IDE by clicking on the
                    <b>Launch Environment</b> button.
                </p>
                <div class="docs-img opacity75">
                    <img src="/images/howto/howto-cloud9-ide.png" alt="cloud9_web_ide" />
                    <br/>
                    <span>Cloud9 web IDE configured with TILES JavaScript API</span>
                </div>
                <p>
                    In the cloud workspace you will find two files:
                    <ol>
                        <li><b>example-API.js</b> - Shows code examples and API instructions</li>
                        <li><b>tiles.js</b> - Empty file where you will write your own application code</li>
                    </ol>
                    In addition to programming the application, you will be able to select your code file, and hit 'Run' in the IDE. This will
                    start the program code in debug mode, and you will be able to see the output of your program in the bash
                    window. This way you are able to properly debug your application code directly in the Cloud IDE during
                    development. For more detailed instructions, please read through the section for
                    <a href="#/docs-app0">Application Development Process</a>.
                </p>

                <hr/>

                <h3>Local development environment</h3>
                <p>
                    When you select the Local development environment, you will have to download the JavaScript APIs with all its files and store
                    them locally on your development machine. The local environment is intended for experienced users only
                    and might be difficult for non-experts to properly set up. Make sure that you have installed npm and
                    Node.js on your system before staring. Node.js and npm can be downloaded
                    <a href="https://nodejs.org/en/download/" target="_blank">here</a>. To download the APIs and start developing,
                    follow these steps:
                    <ul>
                        <li>
                            Open your application from the
                            <a href="/#/applications" target="_blank">list of applications</a> and click
                            <b>Download API</b>
                        </li>
                        <li>Unzip the file on your computer and notice the file structure of the API:
                            <div class="tree-wrapper">
                                <ul class="tree">
                                    <li class="dir">api
                                        <ul>
                                            <li class="dir">clients
                                                <ul>
                                                    <li>event-reader.js</li>
                                                    <li>ifttt-client.js</li>
                                                    <li>postman-client.js</li>
                                                    <li>tiles-client.js</li>
                                                </ul>
                                            </li>
                                            <li>api-client.js</li>
                                            <li>package.json</li>
                                        </ul>
                                    </li>
                                    <li class="dir">templates
                                        <ul>
                                            <li>example-API.js</li>
                                            <li>tiles.js</li>
                                        </ul>
                                    </li>
                                </ul>
                            </div>
                        </li>
                        <li>
                            Open the <b>api</b> directory with your Command-line interface, and type <b>npm install</b> to
                            install all required node packages
                        </li>
                        <li>Open the <b>tiles.js</b> file in the <b>templates</b> directory and change the following:</li>
                        <ul>
                            <li><b>{{tilesLibHolder}<!--escape angular-->}</b> - replace with '../api'</li>
                            <li><b>{{userNameHolder}<!--escape angular-->}</b> - replace with application owner of the target
                                application
                            </li>
                            <li><b>{{appNameHolder}<!--escape angular-->}</b> - replace with name of the target application</li>
                            <li><b>{{ipAddressHolder}<!--escape angular-->}</b> - replace with IP address of TILES Cloud server</li>
                        </ul>
                    </ul>
                    If everything went well, you will now be ready to start developing your application. With the Local development environment,
                    you will be writing your application code in JavaScript (similar to Cloud development environment). Once
                    you have downloaded the API, you are free to select any IDE you want for writing the code. Using this
                    development environment requires more set up as detailed above, but once it is properly configured you
                    will have access to the source code of the entire
                    <a href="{{JSdevUrl}}">TILES JS API</a>, and you will be able to integrate your TILES application into
                    any application running Node.js.
                </p>

                <hr/>

                <h3>Rule Engine development environment</h3>
                <p>
                    Similarly to the Cloud development environment, the Rule Engine is hosted in the TILES Cloud web portal with no need for
                    any local setup. When selecting your app from the
                    <a href="/#/applications" target="_blank">list of applications</a> you will notice some differences in
                    the application page from the Cloud and Local Development Environments. With this environment you do
                    not need to open an external IDE or download the APIs and run them locally, but you will be able to develop
                    your application directly in the application page. Please see
                    <a href="{{REdevUrl}}">Rule Engine API</a> for instructions on how to develop applications with the Rule
                    Engine Development Environment.
                </p>
                <div class="docs-img opacity75">
                    <img src="/images/howto/howto-rule-engine-ide.png" alt="rule_engine_ide" />
                    <br/>
                    <span>Rule Engine Development Environment</span>
                </div>

            </div>
        </div>
    </script>